/* groovylint-disable CompileStatic, Instanceof, UnnecessaryGetter */
/*
 * It disables/enables items from the running instances, skipping the ones included into the file generated by disableItems-to-fileList.groovy
 * and saved in the file passed as parameter (pathToExistingDisabledItems)
 * It only acts over folder passed as parameter (selectedFolders)
 * Tested on CloudBees CI Managed Controller 2.375.2.3
 */
package script.jenkins.jobs

import com.cloudbees.hudson.plugins.folder.AbstractFolder

ArrayList selectedFolders = ['folder-test', 'folder-test1']
pathToExistingDisabledItems = '/tmp/disabledItems.txt'
dryRun = true //true (mock) or false (real)
disable = false //true (disable) or false (enable)
jenkins = Jenkins.instanceOrNull
file = new File(pathToExistingDisabledItems)
validPathsHelp = false

for (String folder : selectedFolders) {
    targetFolder = jenkins.getItemByFullName(folder, AbstractFolder)
    if (targetFolder) {
        targetFolder.getAllItems().findAll{ it instanceof ParameterizedJobMixIn.ParameterizedJob || it instanceof AbstractFolder }.each {
            if (!dryRun) {
                if (file.text.contains("- $it.fullName\n")){
                    println "INFO: $it.fullName is included inside $pathToExistingDisabledItems no action is made"
                } else {
                    it.makeDisabled(disable)
                    println("INFO: Item [$it.fullName] has been set Disable to $disable")
                }
            } else {
                if (file.text.contains("- $it.fullName\n")){
                    println "INFO: $it.fullName is included inside $pathToExistingDisabledItems no action is made"
                } else {
                    println("INFO: Item [$it.fullName] would be a candidate to set Disable to $disable in case dryRun=false")
                }
            }
        }
  } else {
        println "ERROR: Folder $folder is not a valid path."
        validPathsHelp = true
    }
}
if (validPathsHelp) {
    println 'INFO: Valid folders paths are:'
    jenkins.getAllItems(AbstractFolder).each {
        println " - $it.fullName"
    }
}
null
